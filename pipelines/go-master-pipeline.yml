trigger:
  branches:
    include:
      - master
  paths:
    include:
      - goproject
      - kubernetes/gomanifests

variables:

  # from terraform output variable ado_acr_id
  dockerRegistryServiceConnection: '<ado_acr_id>'
  imageRepository: 'goapp'
  containerRegistry: 'aksdevopsweregistry.azurecr.io'
  dockerContext: 'goproject'
  dockerfilePath: '$(dockerContext)/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'go-pipeline-pull-secret'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Go@0
      displayName: Go unit tests
      inputs:
        command: 'test'
        arguments: '-v'
        workingDirectory: $(dockerContext)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        buildContext: $(dockerContext)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: kubernetes/gomanifests
      artifact: kubernetes/gomanifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    # the created environment with <name>.<namespace>
    environment: 'aks-cluster.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/kubernetes/gomanifests/deployment.yml
                $(Pipeline.Workspace)/kubernetes/gomanifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
